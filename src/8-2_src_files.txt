[ File: /home/imedeiros/apps/magoia-master-server/src/app/layout.tsx ]
-----
import React from "react";
import Providers from "./providers";
import "./styles/globals.css";
export default function RootLayout({ children }: { children: React.ReactNode }) {
	return (
		<html lang="pt-br">
			<head>
				<link href="/styles/output.css" rel="stylesheet" />
				<link rel="preconnect" href="https://fonts.googleapis.com" />
				<link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="true" />
				<link
					href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap"
					rel="stylesheet"
				/>
				<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.1/TweenLite.min.js"></script>
				<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.1/TimelineMax.min.js"></script>
			</head>
			<body>
				<Providers>{children}</Providers>
			</body>
		</html>
	);
}

-----
[ File: /home/imedeiros/apps/magoia-master-server/src/app/page.tsx ]
-----
"use client";

import React, { useEffect, useState } from "react";

/**
 * NextUi Components
 */
import { Spinner } from "@heroui/react";

/**
 * HA
 */
import { WebSocketProvider, useWebSocketContext } from "./haProvider/WebSocketProvider";

/**
 * Utils
 */
import formatTimestamp from "./utils/formatTimestamp";
import { weatherConfigs } from "./utils/weatherConfigs";

/**
 * Entities
 */
import { HvacMode, Climate } from "./haProvider/entities";
import CardClimate from "./components/CardClimate";
import PageContentWrapper from "./components/PageContentWrapper";
import AnimatedBeam from "./components/animata/background/animated-beam";

/**
 * Icons
 */
import SnowFlakeIcon from "@app/components/LottieIcons/looties/snowflake.json";
import CardLights from "./components/CardLights";

/**
 * Component
 */
export default function PageWrapper() {
	return (
		<WebSocketProvider>
			<Page />
		</WebSocketProvider>
	);
}

function Page() {
	// Função para remover o botão direito ao segunrar o touch
	// useEffect(() => {
	// 	const disableContextMenu = (e: Event) => e.preventDefault();
	// 	document.addEventListener("contextmenu", disableContextMenu);

	// 	return () => document.removeEventListener("contextmenu", disableContextMenu);
	// }, []);

	const {
		// connectionStatus,
		// states,
		getState,
		callService,
		// subscribeEvents,
		// unsubscribeEvents,
	} = useWebSocketContext();

	const airEntity: Climate = getState("climate.ar");
	const weatherEntity = getState("weather.astroweather_quarto");
	const clockEntity = getState("sensor.date_time");
	const forecastState = getState("weather.forecast_home")?.state;
	const magoiaMonitor = getState("switch.monitor_goia");
	const leticiaMonitor = getState("switch.monitor_leticia");

	const isAirOn = airEntity?.state !== "off";

	const isLoading =
		!airEntity ||
		!weatherEntity ||
		!weatherEntity.attributes ||
		!weatherEntity.attributes.sun_next_rising ||
		!weatherEntity.attributes.sun_next_setting ||
		!clockEntity ||
		!clockEntity.state ||
		!forecastState ||
		!magoiaMonitor ||
		!magoiaMonitor.state ||
		!leticiaMonitor ||
		!leticiaMonitor.state;

	if (isLoading) {
		return (
			<div
				className="w-screen h-screen flex items-center justify-center bg-cover bg-center"
				style={{
					backgroundImage:
						"url('https://www.wallpaperflare.com/static/411/76/909/dragon-ball-dragon-ball-z-majin-boo-dragonball-wallpaper-preview.jpg')",
				}}
			>
				<Spinner
					color="warning"
					label="Carregando o Magoia Master Server e o Home Assistant..."
				/>
			</div>
		);
	}

	return (
		<div>
			<PageContentWrapper
				components={[
					<CardClimate
						airInfo={airEntity}
						changeTemperature={callService}
						icon={SnowFlakeIcon}
						isOn={isAirOn}
					/>,
					<CardLights />,
				]}
				weatherConfigs={weatherConfigs({
					attributes: weatherEntity?.attributes,
					dateTime: clockEntity?.state,
					forecast: forecastState,
				})}
			/>
		</div>
	);
}

-----
[ File: /home/imedeiros/apps/magoia-master-server/src/app/providers.tsx ]
-----
"use client";

import { HeroUIProvider } from "@heroui/react";
import { ThemeProvider } from "next-themes";
import { useState, useEffect } from "react";

export default function Providers({ children }: { children: React.ReactNode }) {
	const [mounted, setMounted] = useState(false);

	useEffect(() => {
		setMounted(true);
	}, []);

	if (!mounted) {
		return <>{children}</>; // Render children without ThemeProvider during SSR
	}

	return (
		<HeroUIProvider>
			<ThemeProvider attribute="class" defaultTheme="system" enableSystem>
				{children}
			</ThemeProvider>
		</HeroUIProvider>
	); // Wrap children with ThemeProvider after mount
}
